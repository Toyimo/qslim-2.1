dnl Process this file with 'autoconf' to produce a 'configure' script
dnl $Id: configure.in,v 1.16 2000/02/04 21:33:34 garland Exp $
AC_REVISION($Revision: 1.16 $)
AC_INIT(../src/stdmix.h)
AC_CONFIG_HEADER(../src/mixcfg.h)

MIX_DEFS="-DHAVE_MIXCFG_H"
AC_SUBST(MIX_DEFS)


dnl ------------------------------------------------------------------------
dnl --
dnl -- Check for programs that MixKit will need
dnl --

AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB
AC_LANG_CPLUSPLUS
AC_PATH_PROG(RM, rm)

dnl ------------------------------------------------------------------------
dnl --
dnl -- Check for libraries
dnl --

AC_CHECK_LIB(m, sqrt)

dnl -- Save the basic (non-GUI) compilation configuration
BASE_LIBS=${LIBS}
BASE_CFLAGS=${CFLAGS}
BASE_CXXFLAGS=${CXXFLAGS}
BASE_LDFLAGS=${LDFLAGS}

IMG_LIBS=""
AC_SUBST(IMG_LIBS)

AC_CHECK_LIB(tiff, TIFFOpen, AC_DEFINE(MIX_HAVE_LIBTIFF) \
				IMG_LIBS="$IMG_LIBS -ltiff")

AC_CHECK_LIB(png, png_read_image, AC_DEFINE(MIX_HAVE_LIBPNG) \
				IMG_LIBS="$IMG_LIBS -lpng")

AC_CHECK_LIB(jpeg, jpeg_start_compress, AC_DEFINE(MIX_HAVE_LIBJPEG) \
				IMG_LIBS="$IMG_LIBS -ljpeg")

AC_PATH_XTRA

CFLAGS="${CFLAGS} ${X_CFLAGS}"
CXXFLAGS="${CXXFLAGS} ${X_CFLAGS}"
LIBS="${X_PRE_LIBS} -lX11 ${X_EXTRA_LIBS} ${LIBS}"
LDFLAGS="${LDFLAGS} ${X_LIBS}"

glneeds="-lX11 -lXext $X_EXTRA_LIBS"

AC_CHECK_LIB(GL, glBegin, \
    AC_DEFINE(MIX_HAVE_OPENGL, "OpenGL") GL_LIBS="-lGL -lGLU", \
    AC_CHECK_LIB(MesaGL, glBegin, \
        AC_DEFINE(MIX_HAVE_OPENGL, "Mesa") GL_LIBS="-lMesaGL -lMesaGLU", \
		,$glneeds),$glneeds)

AC_SUBST(GL_LIBS)

LIBS="${GL_LIBS} $glneeds"

dnl -- Check for OpenGL extensions
AC_CHECK_FUNC(glPolygonOffset, AC_DEFINE(MIX_HAVE_POLYOFFSET))
AC_CHECK_FUNC(glPolygonOffsetEXT, AC_DEFINE(MIX_HAVE_POLYOFFSET_EXT))
AC_CHECK_FUNC(glDrawArraysEXT, AC_DEFINE(MIX_HAVE_VERTARRAYS))

dnl -- Check for FLTK
AC_CHECK_LIB(fltk, numericsort)


LIBS=${BASE_LIBS}
CFLAGS=${BASE_CFLAGS}
CXXFLAGS=${BASE_CXXFLAGS}
LDFLAGS=${BASE_LDFLAGS}

dnl ------------------------------------------------------------------------
dnl --
dnl -- Check for header files that we need
dnl --

AC_HEADER_STDC
AC_CHECK_HEADERS(limits.h)
AC_CHECK_HEADERS(unistd.h)


dnl ------------------------------------------------------------------------
dnl --
dnl -- Check for typedefs, declarations, and compiler characteristics
dnl --

AC_C_CONST
AC_C_INLINE

AC_MSG_CHECKING(for type bool)
AC_TRY_COMPILE([],
	[bool x; x;],
	AC_MSG_RESULT(yes),
	[AC_MSG_RESULT(no)
	 AC_DEFINE(MIX_NEED_BOOL)])


AC_FUNC_ALLOCA
AC_CHECK_FUNC(fabsf,AC_DEFINE(MIX_HAVE_FABSF))
AC_CHECK_FUNC(rint,AC_DEFINE(MIX_HAVE_RINT))
AC_CHECK_FUNC(getrusage,AC_DEFINE(MIX_HAVE_GETRUSAGE))
AC_CHECK_FUNC(times,AC_DEFINE(MIX_HAVE_TIMES))
AC_CHECK_FUNC(random,AC_DEFINE(MIX_HAVE_RANDOM))
AC_CHECK_FUNC(getopt,AC_DEFINE(MIX_HAVE_GETOPT))
AC_CHECK_FUNC(getopt_long,AC_DEFINE(MIX_HAVE_GETOPT_LONG))

AC_ARG_ENABLE(safety,
	[   --enable-safety=N        Set the safety level to N (default=2)],
	[SAFETY=$enableval],
	[SAFETY=2])
AC_SUBST(SAFETY)

dnl ------------------------------------------------------------------------
dnl --
dnl -- Wrap up and write the results
dnl --

AC_CHECK_PROG(PERL5, perl5, yes, no)
AC_CHECK_PROG(PERL, perl, yes, no)

if test $PERL = "yes"; then
	PERL="perl"
else
	PERL=":"
fi

if test $PERL5 = "yes"; then
	PERL="perl5"
fi

AC_MSG_CHECKING([for perl core])
if test $PERL != ":"; then
	PERL_CORE=`$PERL -e 'use Config; print $Config{archlib}'`/CORE
	AC_MSG_RESULT($PERL_CORE)
else
	AC_MSG_RESULT(no)
fi
AC_SUBST(PERL)
AC_SUBST(PERL_CORE)

AC_CHECK_PROG(PYTHON, python, yes, no)
AC_CHECK_PROG(PYTHON14, python1.4, yes, no)
AC_CHECK_PROG(PYTHON15, python1.5, yes, no)

if test $PYTHON = "yes"; then
	PYTHON="python"
elif test $PYTHON15 = "yes"; then
	PYTHON="python1.5"
elif test $PYTHON14 = "yes"; then
	PYTHON="python1.4"
else
	PYTHON=":"
fi

if test $PYTHON != ":"; then
	PYTHON_PREFIX=`$PYTHON -c 'import sys; print sys.prefix'`

	AC_MSG_CHECKING([for python library])
	PYTHON_LIB=`[$PYTHON -c 'import sys; print sys.path[1]']`
	AC_MSG_RESULT(${PYTHON_LIB:-no})

	AC_MSG_CHECKING([for python includes])
	PYTHON_INCLUDE=`echo $PYTHON_LIB | sed -e 's/\/lib\//\/include\//'`
	AC_MSG_RESULT(${PYTHON_INCLUDE:-no})
fi
AC_SUBST(PYTHON)
AC_SUBST(PYTHON_LIB)
AC_SUBST(PYTHON_INCLUDE)

MIX_ROOT=`(cd ..;pwd)`
AC_SUBST(MIX_ROOT)

AC_SUBST(SITE_CFLAGS)
AC_SUBST(SITE_CXXFLAGS)
AC_SUBST(SITE_LDFLAGS)

CFLAGS="$BASE_CFLAGS"
CXXFLAGS="$BASE_CXXFLAGS"
CPPFLAGS="$CPPFLAGS -I\$(MIX_ROOT)/src"
LDFLAGS="$BASE_LDFLAGS -L\$(MIX_ROOT)/src"

AC_OUTPUT(mix-config)
AC_OUTPUT_COMMANDS([cp mix-config $MIX_ROOT])
